package pr115.rules.drl

import java.util.Map;
import java.util.concurrent.TimeUnit;
import jmr.pr115.schedules.run.Heartbeat;
import java.lang.System;
import java.lang.String;
import jmr.s2db.tables.Job;
import jmr.s2db.job.JobType;

import java.util.*;
import java.lang.*;

import jmr.s2db.tables.*;
import jmr.s2db.event.*;
import jmr.s2db.job.*;
import jmr.pr115.schedules.run.*;
import jmr.util.*;
import jmr.util.hardware.*;



rule "Turn on WTOP"
	when
		h : Heartbeat( getTimeUnit() == TimeUnit.HOURS )
		eval( TimeUtil.isHourOfDay( 4 ) )
	then
	
		System.out.println( "Selecting audio program: WTOP stream." );
		
		
		//final jmr.s2db.tables.Job job = null; 

		//final Job job = Job.add( JobType.REMOTE_EXECUTE, new String[] {
		//final jmr.s2db.tables.Job job = jmr.s2db.tables.Job.add( 
		//			JobType.REMOTE_EXECUTE, new String[] {
		jmr.s2db.tables.Job.add( JobType.REMOTE_EXECUTE, new String[] {
						"remote", "media",
						"command", "/Local/scripts/play_wtop.sh",
					} );
					
		//System.out.println( "Job " + job.getJobSeq() 
		//				+ " created: " + job.toString() );
		System.out.println( "Job created." ); 
end


/*
rule "Turn on WTOP - TEST"
	when
		h : Heartbeat( getTimeUnit() == TimeUnit.MINUTES )
		eval( TimeUtil.isMinuteInHour( 56 ) )
	then
	
		System.out.println( "[TEST] Selecting audio program: WTOP stream." );
		
		jmr.s2db.tables.Job.add( JobType.REMOTE_EXECUTE, new String[] {
						"remote", "media",
						"command", "/Local/scripts/play_wtop.sh",
					} );
					

		System.out.println( "Job created." ); 
end

rule "Minute Test"
	when
		h : Heartbeat( getTimeUnit() == TimeUnit.MINUTES )
	then
		System.out.println( "[TEST] Rule 'Minute Test' fired." );
end
*/
